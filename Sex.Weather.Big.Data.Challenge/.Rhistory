<<<<<<< HEAD
View(df)
rm(df)
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i]))]
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2, 3)]
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])),
c(2, 3)]
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)}}
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- data.frame(cities.needed[i])}
View(df)
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- table(cities.needed[i])}
print(df)
rm(df)
df[i] <- data.frame(cities.needed[i])}
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- data.frame(cities.needed[i])}
View(df)
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- data.frame(as.character(cities.needed[i]))}
View(df)
is.factor(cities.needed)
is.character(cities.needed)
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- list(cities.needed[i])}
View(df)
rm(df)
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
df[i,1] <- list(obj$sub_code)
df[i,2] <- list(obj$name)}}
find.codes2(cities.needed)
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)
df <- NULL
rm(df)
df <- NULL
df[1, 1] <- countries$sub_code[1]
df <- countries$sub_code[1]
df <- countries$sub_code == "Portland, OR"
df <- countries$sub_code == "AFGANISTAN"
i=1
df[i, 1] <- 005
df[i, 1] <- 005, 008
df[i] <- 005
rm(df)
i=1
df[i] <- 005
View(df)
rm(df1)
df1 <- NULL
for(i in 1:51){
df1[i] <- data.frame(cities.needed[i])}
print(df1)
View(df1)
rm(df1)
df <- NULL
for(i in 1:(length(cities.needed))){
df1[i] <- list(cities.needed[i])}
for(i in 1:(length(cities.needed))){
df1[i] <- list(cities.needed[i])}
rm(df1)
df1 <- NULL
for(i in 1:(length(cities.needed))){
df1[i] <- list(cities.needed[i])}
View(df1)
View(countries)
cities.needed <- c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock, AR","Los Angeles, CA",
"Dever, CO", "Bridgeport, CT", "Wilmington, DE", "Washington, DC", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines, IA", "Wichita, KS", "Louisville, KY", "New Orleans, LA", "Portland, ME",
"Baltimore, MD", "Boston, MA", "Detroit, MI", "Minneapolis, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Manchester, NH",
"Newark, NJ", "Albuquerque, NM", "New York City, NY", "Charlotte, NC", "Fargo, ND",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI", "Charleston, SC", "Sioux Falls, SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle-Tacoma, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY")
cities.needed <- c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock-Pine Bluff, AR","Los Angeles, CA",
"Denver, CO", "Hartford & New Haven, CT", "Washington, DC (Hagerstown, MD)", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines, IA", "Wichita, KS", "Louisville, KY", "New Orleans, LA", "Portland, ME",
"Baltimore, MD", "Boston, MA", "Detroit, MI", "Minneapolis, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Manchester, NH",
"Newark, NJ", "Albuquerque, NM", "New York City, NY", "Charlotte, NC", "Fargo, ND",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI", "Charleston, SC", "Sioux Falls, SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle-Tacoma, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY")
cities.needed <- c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock-Pine Bluff, AR","Los Angeles, CA",
"Denver, CO", "Hartford & New Haven, CT", "Washington, DC (Hagerstown, MD)", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines-Ames, IA", "Wichita-Hutchinson, KS", "Louisville, KY", "New Orleans, LA", "Portland-Auburn, ME",
"Baltimore, MD", "Boston, MA-Manchester, NH", "Detroit, MI", "Minneapolis-St. Paul, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Boston, MA-Manchester, NH",
"Albuquerque-Santa Fe, NM", "New York, NY", "Charlotte, NC", "US-ND-724",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI-New Bedford, MA", "Charleston, SC", "Sioux Falls(Mitchell), SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT-Plattsburgh, NY", "Richmond-Petersburg, VA", "Seattle-Tacoma, WA",
"Charleston-Huntington, WV", "Milwaukee, WI", "Cheyenne, WY-Scottsbluff, NE")
cities.needed
library(readr)
uscities <- read_csv("uscities.csv")
View(uscities)
length(cities.needed)
read_csv(url(https://raw.githubusercontent.com/isaacascadia/sex-weather/master/Sex.Weather.Big.Data.Challenge/uscities.csv))
library(readr)
uscities <- read_csv("uscities.csv")
View(uscities)
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
rm(df1)
df1 <- NULL
for(i in 1:(length(cities.needed))){
df1[i] <- list(cities.needed[i])}
View(df1)
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
for(i in 1:(length(cities.needed))
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
for(i in 1:(length(cities.needed)))
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,1] <- as.character(obj$sub_code)
#figuring out how to search
gtrends("border collie")
gtrends("border collie", geo = "US")
gtrends("border collie", geo = "US", time = "now 1-H")
#Pull countries data frame from gtrends
countries <- gtrendsR::countries
#Pull cataogries data frame from gtrends
catagories <- gtrendsR::categories
View(catagories)
gtrends( geo = "US", time = "now 1-H",
catagory = 8860)
gtrends( geo = "US", time = "now 1-H",
catagory = 886)
gtrends( geo = "US", time = "now 1-H", catagory = "886")
gtrends( geo = "US", time = "now 1-H", category = 886)
gtrends( geo = "US", time = "now 1-H",
category = 886)
gtrends( geo = "US", time = "now 1-H",
category = 886)
gtrends( geo = "US", time = "now 1-H",
category = "886")
gtrends( geo = "US", time = "now 1-D",
category = "886")
gtrends( geo = "US", time = "now 1-H",
category = "886")
new.york <- gtrends(geo="US-NY-501", time = "today 1-m", category = 1236)
gtrends(geo = "US", time = "now 1-H",
category = "886")
dogs <- gtrends(geo = "US", time = "now 1-H",
category = "886")
dogs <- gtrends(geo = "US", time = "now 1-H",
category = 886)
dogs <- gtrends(geo = "US-NY-501", time = "now 1-H",
category = 886)
new.york <- gtrends(geo="US-NY-501", time = "today 1-m",
category = 1236)
gtrends(geo="US-NY-501", time = "today 1-m",
category = 1236)
gtrends(geo="US-NY-501", time = "today 1-m",
category = 886)
gtrends(geo="US", time = "today 1-m",
category = 886)
gtrends(geo="US", time = "today 1-H",
category = 886)
gtrends(geo="US", time = "today 1-D",
category = 886)
gtrends(geo="US", time = "today 1-M",
category = 886)
gtrends(geo="US", time = "today 1-m",
category = 886)
gtrends(geo="US", time = "today 1-h",
category = 886)
gtrends(geo="US", time = "today 1-d",
category = 886)
gtrends(geo="US", time = "today 1-m",
category = 886)
search.trends <- function(cities.needed){
gtrends(geo = cities.needed,
time = "today+5-y",
catagories = 1236))
}
search.trends <- function(cities.needed){
gtrends(geo = cities.needed, time = "today+5-y", catagories = 1236)}
sex.search <- function(cities.needed){
gtrends(geo = cities.needed, time = "today+5-y", catagories = 1236)}
View(countries)
sex.search("US-OR-820")
gtrends(geo = "US-OR-820", time = "today+5-y", catagories = 1236)}
gtrends(geo = "US-OR-820", time = "today+5-y", catagories = 1236)
gtrends(geo = "US-OR-820", time = "today+5-y", catagory = 1236)
sex.search <- function(cities.needed){
gtrends(geo = cities.needed, time = "today+5-y", catagory = 1236)}
sex.search("US-OR-820")
gtrends(geo = "US-OR-820", time = "today+5-y", catagory = 1236)
sex.search <- function(cities.needed){
gtrends(geo = cities.needed, time = "today+5-y", category = 1236)}
sex.search("US-OR-820")
sex.search <- function(city.code){
gtrends(geo = city.code, time = "today+5-y", category = 1236)}
sex.search("US-OR-820")
install.packages(rnoaa)
install.packages("rnoaa")
library(rnoaa)
wd <- getwd()
# create data directory
dir.create("data")
mydata <- read.csv("filename.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
na.strings = c(NA, ""))
wd <- getwd()
# create data directory
dir.create("data")
mydata <- read.csv("filename.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
na.strings = c(NA, ""))
cities.needed
cities <- read.csv("cities.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
na.strings = c(NA, ""))
head(cities)
for(i in 1:length(cities$name)){
# i <- 1
# saving gtrends query to object
list <- gtrends(geo = as.character(cities[i,3]),
category = 1236, onlyInterest = TRUE)
obj <- list$interest_over_time
# saving object to .csv
write.csv(obj, paste(wd, "/data.output/", as.character(cities[i,1]),
".csv", sep = ""))
}
library(gtrendsR)
for(i in 1:length(cities$name)){
# i <- 1
# saving gtrends query to object
list <- gtrends(geo = as.character(cities[i,3]),
category = 1236, onlyInterest = TRUE)
obj <- list$interest_over_time
# saving object to .csv
write.csv(obj, paste(wd, "/data.output/", as.character(cities[i,1]),
".csv", sep = ""))
}
rm(i)
city <- as.character(cities$sub_code[
which(cities$name == "Washington, DC")])
int <- gtrends(geo = as.character(city),
category = 1236, onlyInterest = TRUE)
test <- (int$interest_over_time)
head(test)
class(test)
for(i in 1:(length(cities$name)/2)){
list <- gtrends(geo = as.character(cities[i,3]),
category = 1236, onlyInterest = TRUE)
obj <- list$interest_over_time
write.csv(obj, paste(wd, "/data.output/", as.character(cities[i,1]),
".csv", sep = ""))}
for(i in (length(cities$name)/2):length(cities$name)){
list <- gtrends(geo = as.character(cities[i,3]),
category = 1236, onlyInterest = TRUE)
obj <- list$interest_over_time
write.csv(obj, paste(wd, "/data.output/", as.character(cities[i,1]),
".csv", sep = ""))}
View(cities)
#-------------removing the cities with the 9 smallest populations-------------
a <- matrix(1:9, nrow=3)
View(a)
subset(a, a[ , 3] < 8)
View(a)
b <- subset(a, a[ , 3] < 8)
View(b)
b <- subset(a, a[ , 3] < 9)
View(b)
?subset
big.cities <- subset(cities, Population < 51000)
View(big.cities)
big.cities <- subset(cities, Population > 51000)
View(big.cities)
big.cities <- subset(cities, Population > 50000)
for(i in 1:(length(cities$name)/2)){
list <- gtrends(geo = as.character(cities[i,3]),
category = 1236, onlyInterest = TRUE)
obj <- list$interest_over_time
write.csv(obj, paste(wd, "/data.output/", as.character(cities[i,1]),
".csv", sep = ""))}
for(i in (length(cities$name)/2):length(cities$name)){
list <- gtrends(geo = as.character(cities[i,3]),
category = 1236, onlyInterest = TRUE)
obj <- list$interest_over_time
write.csv(obj, paste(wd, "/data.output/", as.character(cities[i,1]),
".csv", sep = ""))}
for(i in (length(cities$name)/2):length(cities$name)){
list <- gtrends(geo = as.character(cities[i,3]),
category = 1236, onlyInterest = TRUE)
obj <- list$interest_over_time
write.csv(obj, paste(wd, "/data.output/", as.character(cities[i,1]),
".csv", sep = ""))}
for(i in 1:(length(big.cities$name)/2)){
list <- gtrends(geo = as.character(big.cities[i,3]),
category = 1236, onlyInterest = TRUE)
obj <- list$interest_over_time
write.csv(obj, paste(wd, "/data.output/", as.character(big.cities[i,1]),
".csv", sep = ""))}
(length(big.cities$name)/2)
for(i in (length(big.cities$name)/2):length(big.cities$name)){
list <- gtrends(geo = as.character(big.cities[i,3]),
category = 1236, onlyInterest = TRUE)
obj <- list$interest_over_time
write.csv(obj, paste(wd, "/data.output/", as.character(big.cities[i,1]),
".csv", sep = ""))}
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])),
c(2,3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}}
obj <- countries[which(countries$name == as.character(cities.needed[2])),
c(2, 3)]
#Trying to loop gain
find.codes2 <- function(cities.needed){
df1 <- data.frame(sub_code = rep(NA, 51), name = rep(NA, 51))
for (i in cities.needed[1:length(cities.needed)]) {
obj <- countries[which(countries$name == as.character(cities.needed[i])),
c(2, 3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}}
obj <- countries[which(countries$name == as.character(cities.needed[2])),
c(2, 3)]
gtrends(geo = big.cities[1]), time = "today+5-y", category = 1236)
gtrends(geo = big.cities[1], time = "today+5-y", category = 1236)
gtrends(geo = US-AL-630, time = "today+5-y", category = 1236)
gtrends(geo = US-AL-630, time = "today+5-y", category = 1236)
gtrends(geo = "US-AL-630", time = "today+5-y", category = 1236)
gtrends(geo = "US-AL-630", time = "today+1-y", category = 1236)
gtrends(geo = "US-AL-630", time = "today 12-m", category = 1236)
gtrends(geo = "US-AL-630", time = "today 1-m", category = 1236,
onlyInterest = TRUE)
gtrends(geo = "US-AL-630", time = "today 6-m", category = 1236,
onlyInterest = TRUE)
gtrends(geo = "US-AL-630", time = "today 10-m", category = 1236,
onlyInterest = TRUE)
gtrends(geo = "US-AL-630", time = "today 3-m", category = 1236,
onlyInterest = TRUE)
gtrends(geo = "US-AL-630", time = "2014-01-01 2019-01-01", category = 1236,
onlyInterest = TRUE)
gtrends(geo = "US-AL-630", time = "2014-01-01 2014-07-01", category = 1236,
onlyInterest = TRUE)
gtrends(geo = "US-AL-630", time = "2014-01-01 2014-10-01", category = 1236,
onlyInterest = TRUE)
gtrends(geo = "US-AL-630", time = "2014-01-01 2014-09-01", category = 1236,
onlyInterest = TRUE)
for(i in 1:(length(cities$name))){
list <- gtrends(geo = as.character(cities[i,3]),
category = 1236, onlyInterest = TRUE)
obj <- list$interest_over_time
write.csv(obj, paste(wd, "/data.output/", as.character(cities[i,1]),
".csv", sep = ""))}
#====INDEX======================================================================
#======== File Management ======================================================
# working directory
wd <- getwd()
# names of folders for output data (figures,data output,data)
# store names of the folders in an object
output.folder.names <- c("figures", "data.output")
# and make the folders if they don't exit yet. No need to understand this now
for(i in 1:length(output.folder.names))
if(file.exists(output.folder.names[i]) == FALSE)
dir.create(output.folder.names[i])
#====Libraries==================================================================
# libraries contain specific functions and they come in many shapaes an forms
# library("name of package")
library(rnoaa)
library(gtrendsR)
library(dplyr)
# if you don't have the library yet, install it! Either through the 'Tools' menu
# or install.packages("name of package")
#===== Global Variables =======================================================
countries <- gtrendsR::countries
categories <- gtrendsR::categories
cities <- read.csv("cities.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
na.strings = c(NA, ""))
getwd()
list1 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-01-01 2018-06-30",
onlyInterest = TRUE)
list2 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-07-01 2018-12-31",
onlyInterest = TRUE)
iot <- list1$interest_over_time
iot[182:365] <- list2$interest_over_time
write.csv(iot, paste(wd, "/data.output/", as.character(big.cities[1,1]),
".csv", sep = ""))
iot <- NULL
list1 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-01-01 2018-06-30",
onlyInterest = TRUE)
list2 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-07-01 2018-12-31",
onlyInterest = TRUE)
iot <- list1$interest_over_time
iot[182:365] <- list2$interest_over_time
write.csv(iot, paste(wd, "/data.output/", as.character(big.cities[1,1]),
".csv", sep = ""))
big.cities <- subset(cities, Population > 50000)
iot <- NULL
list1 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-01-01 2018-06-30",
onlyInterest = TRUE)
list2 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-07-01 2018-12-31",
onlyInterest = TRUE)
iot <- list1$interest_over_time
iot[182:365] <- list2$interest_over_time
write.csv(iot, paste(wd, "/data.output/", as.character(big.cities[1,1]),
".csv", sep = ""))
iot <- NULL
list1 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-01-01 2018-06-30",
onlyInterest = TRUE)
list2 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-07-01 2018-12-31",
onlyInterest = TRUE)
iot <- list1$interest_over_time
iot[182:365,] <- list2$interest_over_time
write.csv(iot, paste(wd, "/data.output/", as.character(big.cities[1,1]),
".csv", sep = ""))
iot
View(iot)
iot <- NULL
list1 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-01-01 2018-06-30",
onlyInterest = TRUE)
list2 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-07-01 2018-12-31",
onlyInterest = TRUE)
iot <- list1$interest_over_time
iot[182:365,NA] <- list2$interest_over_time
rm(iot)
list1 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-01-01 2018-06-30",
onlyInterest = TRUE)
list2 <- gtrends(geo = as.character(big.cities[1,3]),
category = 1236,
time = "2018-07-01 2018-12-31",
onlyInterest = TRUE)
iot <- list1$interest_over_time
iot[182:365] <- list2$interest_over_time
iot[182:365,] <- list2$interest_over_time
=======
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
if(typeof(lcd(station.id, year=2017)==typeof(US.Cities)){
break
}
}
}
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
for(i in 1:nrow(US.Cities)){
#Look up city
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
y <- 1
repeat{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
if(typeof(lcd(station.id, year=2017)==typeof(US.Cities)){
break
}
}
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
First try using repeat loop
for(i in 1:nrow(US.Cities)){
#Look up city
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
y <- 1
repeat{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
View(US.Cities)
View(station)
y <- 1
repeat{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
print("fail")
}
}
repeat{
#find city station
station.id <- paste(station$usaf[2],station$wban[2],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
print("fail")
}
}
repeat{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
print("fail")
}
}
y <- 1
repeat{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
y <- y+1
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
y <- 1
repeat{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
y <- y+1
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break, print("fail")
}
}
y <- 1
repeat{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
y <- y+1
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break, print("fail")
}
}
station.id <- paste(station$usaf[y],station$wban[y],sep="")
lcd(station.id, year=2017)
for(y in 1:nrow(station)){
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break,
}
}
for(y in 1:nrow(station)){
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- lcd(station.id, year=2017)
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
is.error(lcd(station.id, year=2017)
is.error(lcd(station.id, year=2017)
is.error(lcd(station.id, year=2017))
isError(lcd(station.id, year=2017))
try(lcd(station.id, year=2017))
for(i in 1:1){
#Look up city
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
#find city station
station.id <- paste(station$usaf[1],station$wban[1],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
for(i in 1:1){
#Look up city
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
#find city station
station.id <- paste(station$usaf[1],station$wban[1],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
for(i in 1:nrow(US.Cities)){
#Look up city
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
for(y in 1:nrow(station)){
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
for(i in 1:nrow(US.Cities)){
#Look up city
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
for(y in 1:nrow(station)){
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- (lcd(station.id, year=2017))
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
i <- 1
{
#Look up city
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
for(y in 1:nrow(station)){
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- (lcd(station.id, year=2017))
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
typeof(lcd(station.id, year = 2017))
typeof(US.Cities))
typeof(US.Cities)
#----Attempt 3------------------------------------------------------------------
i <- 2
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
View(station)
station.id <- paste(station$usaf[y],station$wban[y],sep="")
station.id <- paste(station$usaf[2],station$wban[2],sep="")
station.weather <- (lcd(station.id, year=2017))
y=1{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
station.weather <- (lcd(station.id, year=2017))
y=2{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- (lcd(station.id, year=2017))
y=2{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
y=2{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- (lcd(station.id, year=2017))
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
y <- 2{
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- (lcd(station.id, year=2017))
y <- 2
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- (lcd(station.id, year=2017))
y <- 1 {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- (lcd(station.id, year=2017))
y <- 1
y <- 1 {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
}
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- (lcd(station.id, year=2017))
}
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- (lcd(station.id, year=2017))
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
for(i in 1:nrow(US.Cities)){
#Look up city
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- (lcd(station.id, year=2017))
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017))
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017), silent = TRUE)
}
for(i in 1:nrow(US.Cities)){
#Look up city
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017), silent = TRUE)
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017), silent = TRUE)
if(typeof(lcd(station.id, year = 2017))==typeof(US.Cities)){
break
}
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017), silent = TRUE)
}
for(y in 1:10) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017), silent = TRUE)
if(typeof(station.weather)==typeof(US.Cities)){
break
}
}
for(y in 1:nrow(station)) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017), silent = TRUE)
if(typeof(station.weather)==typeof(US.Cities)){
break
}
}
for(i in 1:nrow(US.Cities)){
#Look up city
station <- isd_stations_search(lat=US.Cities$lat[i], lon = US.Cities$lng[i])
for(y in 1:nrow(station)) {
#find city station
station.id <- paste(station$usaf[y],station$wban[y],sep="")
#collect data from station
station.weather <- try(lcd(station.id, year=2017), silent = TRUE)
if(typeof(station.weather)==typeof(US.Cities)){
break
}
}
station.weatherdata <- data.frame(date=station.weather$date,
latitude=station.weather$latitude,
longitude=station.weather$longitude,
name=station.weather$name,
temperature= station.weather$hourlydrybulbtemperature,
source= station.weather$source)
#file name
filename <- paste(US.Cities$name[i], "weather.csv",sep=".")
#create new dataset
write.csv(station.weatherdata, paste(path.data, paste(filename), sep=""),
row.names = FALSE)
}
#Still not working
>>>>>>> 509086243c63886a34640ecd986543e2944d86d4
