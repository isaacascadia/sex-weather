"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY")
cities.needed <- c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock, AR","Los Angeles, CA",
"Dever, CO", "Bridgeport, CT", "Wilmington, DE", "Washington, DC", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines, IA", "Wichita, KS", "Louisville, KY", "New Orleans, LA", "Portland, ME",
"Baltimore, MD", "Boston, MA", "Detroit, MI", "Minneapolis, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Manchester, NH",
"Newark, NJ", "Albuquerque, NM", "New York City, NY", "Charlotte, NC", "Fargo, ND",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI", "Charleston, SC", "Sioux Falls, SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY")
cities.needed <- vector("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock, AR","Los Angeles, CA",
"Dever, CO", "Bridgeport, CT", "Wilmington, DE", "Washington, DC", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines, IA", "Wichita, KS", "Louisville, KY", "New Orleans, LA", "Portland, ME",
"Baltimore, MD", "Boston, MA", "Detroit, MI", "Minneapolis, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Manchester, NH",
"Newark, NJ", "Albuquerque, NM", "New York City, NY", "Charlotte, NC", "Fargo, ND",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI", "Charleston, SC", "Sioux Falls, SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY")
cities.needed <- vector(c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock, AR","Los Angeles, CA",
"Dever, CO", "Bridgeport, CT", "Wilmington, DE", "Washington, DC", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines, IA", "Wichita, KS", "Louisville, KY", "New Orleans, LA", "Portland, ME",
"Baltimore, MD", "Boston, MA", "Detroit, MI", "Minneapolis, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Manchester, NH",
"Newark, NJ", "Albuquerque, NM", "New York City, NY", "Charlotte, NC", "Fargo, ND",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI", "Charleston, SC", "Sioux Falls, SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY"))
cities.needed <- data.frame(c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock, AR","Los Angeles, CA",
"Dever, CO", "Bridgeport, CT", "Wilmington, DE", "Washington, DC", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines, IA", "Wichita, KS", "Louisville, KY", "New Orleans, LA", "Portland, ME",
"Baltimore, MD", "Boston, MA", "Detroit, MI", "Minneapolis, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Manchester, NH",
"Newark, NJ", "Albuquerque, NM", "New York City, NY", "Charlotte, NC", "Fargo, ND",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI", "Charleston, SC", "Sioux Falls, SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY"))
cities.needed <- data.frame(name = c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock, AR","Los Angeles, CA",
"Dever, CO", "Bridgeport, CT", "Wilmington, DE", "Washington, DC", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines, IA", "Wichita, KS", "Louisville, KY", "New Orleans, LA", "Portland, ME",
"Baltimore, MD", "Boston, MA", "Detroit, MI", "Minneapolis, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Manchester, NH",
"Newark, NJ", "Albuquerque, NM", "New York City, NY", "Charlotte, NC", "Fargo, ND",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI", "Charleston, SC", "Sioux Falls, SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY"))
View(cities.needed)
find.codes2 <- function(cities.needed){
df1 <- data.frame(sub_code = rep(NA, 51), name = rep(NA, 51))
for(i in length(cities.needed$name)){
obj <- countries[which(countries$name == as.character(cities.needed$name[i])), c(2, 3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
print(find.codes2(cities.needed))
find.codes2(cities.needed)
for (i in length(cities.needed$name) {
for (i in length(cities.needed$name)) {
print(i)
}
for (i in length(cities.needed)) {
print(i)
}
for (i in cities.needed) {
print(i)
}
!for
?for
?for()
variable
?for (variable in vector) {
}
cities.needed <- c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock, AR","Los Angeles, CA",
"Dever, CO", "Bridgeport, CT", "Wilmington, DE", "Washington, DC", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines, IA", "Wichita, KS", "Louisville, KY", "New Orleans, LA", "Portland, ME",
"Baltimore, MD", "Boston, MA", "Detroit, MI", "Minneapolis, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Manchester, NH",
"Newark, NJ", "Albuquerque, NM", "New York City, NY", "Charlotte, NC", "Fargo, ND",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI", "Charleston, SC", "Sioux Falls, SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY")
for (i in cities.needed) {
print(i)
}
for (i in length(cities.needed)) {
print(i)
}
for (i in cities.needed[1, ]:cities.needed[51, ]) {
print(i)
}
for (i in cities.needed[1]:cities.needed[51]) {
print(i)
}
for (i in length(cities.needed$name)) {
print(i)
}
for (i in cities.needed[1]:cities.needed[51]) {
print(i)
}
for (i in length(cities.needed)) {
print(i)
}
find.codes2 <- function(cities.needed){
df1 <- data.frame(sub_code = rep(NA, 51), name = rep(NA, 51))
for(i in length(cities.needed$name)){
obj <- countries[which(countries$name == as.character(cities.needed$name[i])), c(2, 3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
print(find.codes2(cities.needed))
find.codes2 <- function(cities.needed){
df1 <- data.frame(sub_code = rep(NA, 51), name = rep(NA, 51))
for(i in length(cities.needed)){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2, 3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
print(find.codes2(cities.needed))
for (i in cities.needed) {
print(i)
}
print(cities.needed)
for (i in length(cities.needed)) {
print(i)
}
for(i in length(cities.needed)){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2, 3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}}
for(i in length(cities.needed)){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2, 3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}
View(obj)
obj <- countries[which(countries$name == as.character(cities.needed[1])), c(2, 3)]
View(obj)
obj <- countries[which(countries$name == as.character(cities.needed[2])), c(2, 3)]
View(obj)
df1 <- data.frame(sub_code = rep(NA, 51), name = rep(NA, 51))
View(df1)
find.codes2 <- function(cities.needed){
df1 <- data.frame(sub_code = rep(NA, 51), name = rep(NA, 51))
for(i in length(cities.needed)){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2, 3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
for (i in cities.needed[1:length(cities.needed)]) {
print(i)
}
find.codes2 <- function(cities.needed){
df1 <- data.frame(sub_code = rep(NA, 51), name = rep(NA, 51))
for (i in cities.needed[1:length(cities.needed)]) {
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2, 3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
for (i in cities.needed[1:length(cities.needed)]) {
print(i)
}
for (i in cities.needed[1:length(cities.needed)]) {
fff[i] <- cities.needed[i]
}
fff <- NUlL
fff <- NUlL
fff <- NULL
for (i in cities.needed[1:length(cities.needed)]) {
fff[i] <- cities.needed[i]
}
i <- 3
fff[i] <- cities.needed[i]
print(fff)
rm(fff)
i <- 3
fff[i] <- cities.needed[i]
print(fff)
fff <- NULL
i <- 3
fff[i] <- cities.needed[i]
print(fff)
fff <- NULL
i <- 4
fff[i] <- cities.needed[i]
print(fff)
rm(fff)
fff <- NULL
i <- 1:3
fff[i] <- cities.needed[i]
print(fff)
rm(fff)
fff <- NULL
i <- 1:51
fff[i] <- cities.needed[i]
print(fff)
df <- NULL
for(i in 1:51){
df <- cities.needed[i]}
print(df)
df <- NULL
for(i in 1:51){
df[i, ] <- cities.needed[i]}
df <- NULL
for(i in 1:51){
df[i] <- cities.needed[i]}
print(df)
df <- NULL
for(i in 1:51){
df[i] <- data.frame(cities.needed[i])}
View(df1)
df <- NULL
for(i in 1:51){
df[i] <- cities.needed[i]}
print(df)
df <- NULL
for(i in 1:51){
df[i] <- data.frame(cities.needed[i])}
print(df)
View(df1)
df <- NULL
for(i in 1:51){
df[i] <- data.frame(cities.needed[i])}
print(df)
View(df)
rm(df)
df <- NULL
for(i in 1:51){
df[i] <- data.frame(cities.needed[i])}
View(df)
length(cities.needed)
length(cities.needed)
1:(length(cities.needed))
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- data.frame(cities.needed[i])}
View(df)
as.character(df)
View(df)
View(df)
as.character(veiw(df))
as.character(view(df))
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- data.frame(as.character(cities.needed[i]))}
View(df)
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- data.frame(cities.needed[i])}
View(df)
rm(df)
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i]))]
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2, 3)]
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])),
c(2, 3)]
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)}}
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- data.frame(cities.needed[i])}
View(df)
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- table(cities.needed[i])}
print(df)
rm(df)
df[i] <- data.frame(cities.needed[i])}
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- data.frame(cities.needed[i])}
View(df)
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- data.frame(as.character(cities.needed[i]))}
View(df)
is.factor(cities.needed)
is.character(cities.needed)
rm(df)
df <- NULL
for(i in 1:(length(cities.needed))){
df[i] <- list(cities.needed[i])}
View(df)
rm(df)
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
df[i,1] <- list(obj$sub_code)
df[i,2] <- list(obj$name)}}
find.codes2(cities.needed)
df[i,1] <- as.character(obj$sub_code)
df[i,2] <- as.character(obj$name)
df <- NULL
rm(df)
df <- NULL
df[1, 1] <- countries$sub_code[1]
df <- countries$sub_code[1]
df <- countries$sub_code == "Portland, OR"
df <- countries$sub_code == "AFGANISTAN"
i=1
df[i, 1] <- 005
df[i, 1] <- 005, 008
df[i] <- 005
rm(df)
i=1
df[i] <- 005
View(df)
rm(df1)
df1 <- NULL
for(i in 1:51){
df1[i] <- data.frame(cities.needed[i])}
print(df1)
View(df1)
rm(df1)
df <- NULL
for(i in 1:(length(cities.needed))){
df1[i] <- list(cities.needed[i])}
for(i in 1:(length(cities.needed))){
df1[i] <- list(cities.needed[i])}
rm(df1)
df1 <- NULL
for(i in 1:(length(cities.needed))){
df1[i] <- list(cities.needed[i])}
View(df1)
View(countries)
cities.needed <- c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock, AR","Los Angeles, CA",
"Dever, CO", "Bridgeport, CT", "Wilmington, DE", "Washington, DC", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines, IA", "Wichita, KS", "Louisville, KY", "New Orleans, LA", "Portland, ME",
"Baltimore, MD", "Boston, MA", "Detroit, MI", "Minneapolis, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Manchester, NH",
"Newark, NJ", "Albuquerque, NM", "New York City, NY", "Charlotte, NC", "Fargo, ND",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI", "Charleston, SC", "Sioux Falls, SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle-Tacoma, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY")
cities.needed <- c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock-Pine Bluff, AR","Los Angeles, CA",
"Denver, CO", "Hartford & New Haven, CT", "Washington, DC (Hagerstown, MD)", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines, IA", "Wichita, KS", "Louisville, KY", "New Orleans, LA", "Portland, ME",
"Baltimore, MD", "Boston, MA", "Detroit, MI", "Minneapolis, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Manchester, NH",
"Newark, NJ", "Albuquerque, NM", "New York City, NY", "Charlotte, NC", "Fargo, ND",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI", "Charleston, SC", "Sioux Falls, SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT", "Virginia Beach, VA", "Seattle-Tacoma, WA",
"Charleston, WV", "Milwaukee, WI", "Cheyenne, WY")
cities.needed <- c("Birmingham, AL", "Anchorage, AK", "Phoenix, AZ", "Little Rock-Pine Bluff, AR","Los Angeles, CA",
"Denver, CO", "Hartford & New Haven, CT", "Washington, DC (Hagerstown, MD)", "Jacksonville, FL",
"Atlanta, GA", "Honolulu, HI", "Boise, ID", "Chicago, IL", "Indianapolis, IN",
"Des Moines-Ames, IA", "Wichita-Hutchinson, KS", "Louisville, KY", "New Orleans, LA", "Portland-Auburn, ME",
"Baltimore, MD", "Boston, MA-Manchester, NH", "Detroit, MI", "Minneapolis-St. Paul, MN", "Jackson, MS",
"Kansas City, MO", "Billings, MT", "Omaha, NE", "Las Vegas, NV", "Boston, MA-Manchester, NH",
"Albuquerque-Santa Fe, NM", "New York, NY", "Charlotte, NC", "US-ND-724",
"Columbus, OH", "Oklahoma City, OK", "Portland, OR", "Philadelphia, PA",
"Providence, RI-New Bedford, MA", "Charleston, SC", "Sioux Falls(Mitchell), SD", "Nashville, TN", "Houston, TX",
"Salt Lake City, UT", "Burlington, VT-Plattsburgh, NY", "Richmond-Petersburg, VA", "Seattle-Tacoma, WA",
"Charleston-Huntington, WV", "Milwaukee, WI", "Cheyenne, WY-Scottsbluff, NE")
cities.needed
library(readr)
uscities <- read_csv("uscities.csv")
View(uscities)
length(cities.needed)
read_csv(url(https://raw.githubusercontent.com/isaacascadia/sex-weather/master/Sex.Weather.Big.Data.Challenge/uscities.csv))
library(readr)
uscities <- read_csv("uscities.csv")
View(uscities)
find.codes2 <- function(cities.needed){
df <- NULL
for(i in 1:(length(cities.needed))){
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,2] <- as.character(obj$name)}}
find.codes2(cities.needed)
rm(df1)
df1 <- NULL
for(i in 1:(length(cities.needed))){
df1[i] <- list(cities.needed[i])}
View(df1)
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
for(i in 1:(length(cities.needed))
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
for(i in 1:(length(cities.needed)))
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
obj <- countries[which(countries$name == as.character(cities.needed[i])), c(2,3)]
df1[i,1] <- as.character(obj$sub_code)
df1[i,1] <- as.character(obj$sub_code)
#figuring out how to search
gtrends("border collie")
gtrends("border collie", geo = "US")
gtrends("border collie", geo = "US", time = "now 1-H")
#Pull countries data frame from gtrends
countries <- gtrendsR::countries
#Pull cataogries data frame from gtrends
catagories <- gtrendsR::categories
View(catagories)
gtrends( geo = "US", time = "now 1-H",
catagory = 8860)
gtrends( geo = "US", time = "now 1-H",
catagory = 886)
gtrends( geo = "US", time = "now 1-H", catagory = "886")
gtrends( geo = "US", time = "now 1-H", category = 886)
gtrends( geo = "US", time = "now 1-H",
category = 886)
gtrends( geo = "US", time = "now 1-H",
category = 886)
gtrends( geo = "US", time = "now 1-H",
category = "886")
gtrends( geo = "US", time = "now 1-D",
category = "886")
gtrends( geo = "US", time = "now 1-H",
category = "886")
new.york <- gtrends(geo="US-NY-501", time = "today 1-m", category = 1236)
gtrends(geo = "US", time = "now 1-H",
category = "886")
dogs <- gtrends(geo = "US", time = "now 1-H",
category = "886")
dogs <- gtrends(geo = "US", time = "now 1-H",
category = 886)
dogs <- gtrends(geo = "US-NY-501", time = "now 1-H",
category = 886)
new.york <- gtrends(geo="US-NY-501", time = "today 1-m",
category = 1236)
gtrends(geo="US-NY-501", time = "today 1-m",
category = 1236)
gtrends(geo="US-NY-501", time = "today 1-m",
category = 886)
gtrends(geo="US", time = "today 1-m",
category = 886)
gtrends(geo="US", time = "today 1-H",
category = 886)
gtrends(geo="US", time = "today 1-D",
category = 886)
gtrends(geo="US", time = "today 1-M",
category = 886)
gtrends(geo="US", time = "today 1-m",
category = 886)
gtrends(geo="US", time = "today 1-h",
category = 886)
gtrends(geo="US", time = "today 1-d",
category = 886)
gtrends(geo="US", time = "today 1-m",
category = 886)
search.trends <- function(cities.needed){
gtrends(geo = cities.needed,
time = "today+5-y",
catagories = 1236))
}
search.trends <- function(cities.needed){
gtrends(geo = cities.needed, time = "today+5-y", catagories = 1236)}
sex.search <- function(cities.needed){
gtrends(geo = cities.needed, time = "today+5-y", catagories = 1236)}
View(countries)
sex.search("US-OR-820")
gtrends(geo = "US-OR-820", time = "today+5-y", catagories = 1236)}
gtrends(geo = "US-OR-820", time = "today+5-y", catagories = 1236)
gtrends(geo = "US-OR-820", time = "today+5-y", catagory = 1236)
sex.search <- function(cities.needed){
gtrends(geo = cities.needed, time = "today+5-y", catagory = 1236)}
sex.search("US-OR-820")
gtrends(geo = "US-OR-820", time = "today+5-y", catagory = 1236)
sex.search <- function(cities.needed){
gtrends(geo = cities.needed, time = "today+5-y", category = 1236)}
sex.search("US-OR-820")
sex.search <- function(city.code){
gtrends(geo = city.code, time = "today+5-y", category = 1236)}
sex.search("US-OR-820")
